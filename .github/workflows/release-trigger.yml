name: Create Release, Tag and Deploy

on:
  workflow_dispatch:
  workflow_call:
  pull_request_target:
    branches:
      - main
    types:
      - closed

jobs:
  update-version:
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'

      - name: Extract version from package.py
        id: extract_version
        run: |
          version=$(grep -oP "version = \"\K[0-9.]*" package.py)

          if [[ $version =~ ^([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
              major=${BASH_REMATCH[1]}
              minor=${BASH_REMATCH[2]}
              patch=$(( ${BASH_REMATCH[3]} + 1 ))
              
              # Return the new version string with the updated patch number
              echo "$major.$minor.$patch"
          else
              echo "Invalid version format" >&2
              exit 1
          fi
          echo "Extracted version: $major.$minor.$patch"
          echo "::set-output name=version::$major.$minor.$patch"
          echo "::set-output name=previous_version::$version"

      - name: Update package.py
        run: |
          version=${{ steps.extract_version.outputs.version }}
          previous_version=${{ steps.extract_version.outputs.previous_version }}
          sed -i "s/$previous_version/$version/g" package.py >> package.py

      - name: Submit Version Update
        run: |
          git add package.py
          git commit -m "Automation: Version Update"

      - name: Submit Version Update
        uses: CasperWA/push-protected@v2.16.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ inputs.checkout_branch }}
          tags: false
          unprotected_reviews: false

  build:
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    needs: update-version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'

      - name: Extract version from package.py
        id: extract_version
        run: |
          version=$(grep -oP "version = \"\K[0-9.]*" package.py)
          echo "::set-output name=version::$version"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install # Install production dependencies only

      - name: Run create_package.py
        run: poetry run python create_package.py

      - name: Find generated zip file
        id: find_zip
        run: |
          ls -l package/*.zip
          echo "::set-output name=zip_path::$(find package -name '*.zip' -print -quit)"

      - name: Set zip file path
        id: set_zip_path
        run: echo "::set-output name=zip_path::$(echo ${{ steps.find_zip.outputs.zip_path }})"

      - name: Find generated zip file name
        id: find_zip_file_name
        run: |
          ls -l package/*.zip
          ZIP_PATH=$(find package -name '*.zip' -print -quit)
          ZIP_FILE=$(basename "$ZIP_PATH")
          echo "::set-output name=zip_filename::$ZIP_FILE"

      - name: Extract name from package.py
        id: extract_name
        run: |
          name=$(grep -oP 'name = "\K[^"]*' package.py)
          echo "Extracted name: $name"
          echo "::set-output name=name::$name"

      - name: Create new tag
        run: |
          new_version=${{ steps.extract_version.outputs.version }}
          git tag $new_version
          git push origin $new_version

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.extract_version.outputs.version }}
          release_name: Release ${{ steps.extract_version.outputs.version }}
          files: ${{ steps.set_zip_path.outputs.zip_path }}
          generate_release_notes: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
